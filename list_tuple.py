#list
#创建一个普通列表
a=['a','b','c','d']
#创建一个混合列表
mix=[1,'a',3.1415,[1,2,1.414]]
#创建一个空列表
empty=[]

#向列表添加元素
#1. append(),用法："列表名字".append("元素"),append只能加上一个元素
#若并两个元素，将会出错 
a=['a','b','c','d']
a.append(3.14)
print(a)
len(a)
#2. extend(),用法:"列表名称".extend("列表") ,extend用一个列表拓展另一个列表，因此可以同时并入多个元素 
x = [1,2,3,'a',[1,'b']]
y = x.extend(['s','b',['aa','bb',123]])
#3. insert(),用法:"列表名称".insert(插入位置,"元素") 
a = [1,2,3,'a',[1,'b']]
b = a.insert(0, 'get')

#在列表中获取元素
x = [1,2,3,'a',[1,'b']]
x[0]

#改写列表中的元素
x = [1,2,3,'a',[1,'b']]
x[0] = 'ch'

#列表中删除元素
ab=['get',1,2,3,4,[11,'fx']]
ab.remove('get')
ab=['get',1,2,3,4,[11,'fx']]
del ab[0]
ab=['get',1,2,3,4,[11,'fx']]
ab.pop()	#"列表名".pop(),最后一个元素删除
ab=['get',1,2,3,4,[11,'fx']]
ab.pop(1)	#"列表名".pop("第几个元素(索引词)")

#列表分片
ab=['get',1,2,3,4,[11,'fx']]
ab[0:3]
ab[:5]
ab[3:]
ab[:]

#列表操作符
'''
1.列表比较大小 
(1)从列表中的第0个元素开始比较 
(2)字符串比较则比较ASCII码的大小 
(3)字符串和数字不能比较
'''
a=[3,4,5]
b=[1,6,7]
a>b               #结果为True

#列表加法  类似extend()，语法:"列表"+"列表"
a = [3,4,5]
b = [1,6,7]
c = a + b 		#[3,4,5,1,6,7]

#列表乘法  列表重复拓展，语法:"列表"* n 
a = [3,4,5]
b = a*3
c = 3*a 		#[3,4,5,3,4,5,3,4,5]

#询问某元素是否在列表中，语法:"元素" in "列表"，"元素" not in "列表" 
a = [3,4,5]
3 in a          #返回True
3 not in a      #返回False
6 in a          #返回False
6 not in a      #返回True

#count 数出元素在列表中出现的次数 ,语法："列表".count("元素")
a = [3,4,5,3,4,5,3,4,5]
a.count(3)          #结果为3

#index 返回某元素在列表中的位置 ，语法："列表".index("元素",搜索初始位置，搜索终止位置)
a = [3,4,5,3,4,5,3,4,5]
a.index(3)          #结果为0
a.index(3,1,4)      #结果为3
a.index(3,1,3)      #出错，因3不在范围中

#reverse 将列表逆转
a = [3,4,5,3,4,5,3,4,5]
a.reverse()			#结果为[5, 4, 3, 5, 4, 3, 5, 4, 3]

#sort 排序，从小到大 ，语法："列表".sort() 从小到大，"列表".sort(reverse=true) 从大到小
a = [3,4,5,3,4,5,3,4,5]
a.sort()			#结果为[3, 3, 3, 4, 4, 4, 5, 5, 5]
a.sort(reverse = True)	#结果为[5, 5, 5, 4, 4, 4, 3, 3, 3]


#tuple		元素不可变
#创建元组时，使用的是()
a = (1,2,3,4,5,6)           #a为元组，结果为(1,2,3,4,5,6) 
a = (1)
type(a)                     #结果为<class 'int'> 不为tuple

a = (1,)
type(a)                    #结果为<class 'tuple'>

a = 1,
type(a)                    #结果为<class 'tuple'> 

c = 1,2,3,4
type(c)                     #结果为<class 'tuple'>

b = ()                      
type(b)                     #结果为<class 'tuple'>,为建一个空元组

8 * (8)                     #结果为64
8 * (8,)                    #结果为(8, 8, 8, 8, 8, 8, 8, 8)

a = (1,2,3,4,5,6)           #a为元组
a                           #结果为(1,2,3,4,5,6)
a[3]                        #结果为4
a[3:]                       #结果为(4, 5, 6)
a[:3]                       #结果为(1, 2, 3)
a[:]                        #结果为(1, 2, 3, 4, 5, 6)
b=a[:]
b                           #结果为(1, 2, 3, 4, 5, 6)

a = (1,2,3,4,5,6)
a[1] = 9                    #出错

a = (1,2,3,4,5,6)
a = a[:2]+(99)+a[2:]        #出错，(99)为int
a = a[:2]+(99,)+a[2:]       #结果为(1, 2, 99, 3, 4, 5, 6)

a = (1,2,3,4,5,6)
a = a[:2]+a[3:]             #结果为(1, 2, 4, 5, 6)